<robot xmlns:xacro="http://ros.org/wiki/xacro">
  <xacro:include filename="$(find mobipick_description)/urdf/common_properties.urdf.xacro" />

  <xacro:property name="astra_s_mass" value="0.300" />

  <!-- distance between center of camera and camera_link -->
  <xacro:property name="astra_cam_py" value="0.0485"/>

  <xacro:macro name="astra_cam" params="prefix">
    <!-- see sensor_mount.urdf.xacro for sensor_mount_link-->

    <joint name="${prefix}eef_main_cam_joint" type="fixed">
      <origin xyz="-0.032 0.033 -0.065" rpy="${pi/2} ${pi/2} ${-pi/2}" />
      <parent link="${prefix}sensor_mount_link"/>
      <child link="${prefix}eef_main_cam_link"/>
    </joint>

    <xacro:sensor_astra_mini_s camera_name="eef_main_cam" prefix="${prefix}" />

  </xacro:macro>

  <xacro:macro name="sensor_astra_mini_s" params="camera_name prefix">
    <link name="${prefix}${camera_name}_link">
      <visual>
        <origin xyz="0 0 0" />
        <geometry>
          <mesh filename="package://mobipick_description/meshes/sensors/astra_mini.stl"/>
        </geometry>
        <xacro:insert_block name="material_black" />
      </visual>
      <collision>
        <origin xyz="${-0.0325 / 2} ${-astra_cam_py} 0.0" />
        <geometry>
          <box size="0.0525 0.14 0.0575" /> <!-- padded 0.01 for moveit collision checking-->
        </geometry>
      </collision>
      <xacro:box_inertial mass="${astra_s_mass}" x="0.0325" y="0.12" z="0.0375">
        <origin xyz="${-0.0325 / 2} ${-astra_cam_py} 0.0" />
      </xacro:box_inertial>
    </link>
    <gazebo reference="${prefix}${camera_name}_link">
      <material>Gazebo/FlatBlack</material>
    </gazebo>

    <joint name="${prefix}${camera_name}_rgb_joint" type="fixed">
      <origin xyz="0 -0.045 0" rpy="0 0 0" />
      <parent link="${prefix}${camera_name}_link"/>
      <child link="${prefix}${camera_name}_rgb_frame" />
    </joint>
    <link name="${prefix}${camera_name}_rgb_frame"/>

    <joint name="${prefix}${camera_name}_rgb_optical_joint" type="fixed">
      <origin xyz="0 0 0" rpy="${-pi/2} 0 ${-pi/2}" />
      <parent link="${prefix}${camera_name}_rgb_frame" />
      <child link="${prefix}${camera_name}_rgb_optical_frame" />
    </joint>
    <link name="${prefix}${camera_name}_rgb_optical_frame"/>

    <joint name="${prefix}${camera_name}_rgb_logical_joint" type="fixed">
      <origin xyz="0 0 0" rpy="0 0 0" />
      <parent link="${prefix}${camera_name}_rgb_frame" />
      <child link="${prefix}${camera_name}_rgb_logical_frame" />
    </joint>
    <link name="${prefix}${camera_name}_rgb_logical_frame"/>

    <gazebo reference="${prefix}${camera_name}_rgb_logical_frame">
      <sensor name="logical_camera" type="logical_camera">
        <logical_camera>
          <near>0.05</near>
          <far>3.50</far>
          <horizontal_fov>${60.0 * pi/180.0}</horizontal_fov>
          <aspect_ratio>${640.0/480.0}</aspect_ratio>
        </logical_camera>
        <visualize>false</visualize>
        <always_on>true</always_on>
        <update_rate>10</update_rate>
        <plugin name="logical_camera_plugin" filename="liblogical_camera_plugin.so">
          <cameraName>${prefix}${camera_name}</cameraName>
          <imageTopicName>rgb/logical_image</imageTopicName>
          <frameName>${prefix}${camera_name}_rgb_logical_frame</frameName>
        </plugin>
      </sensor>
    </gazebo>

    <joint name="${prefix}${camera_name}_depth_joint" type="fixed">
      <origin xyz="0 -0.02 0" rpy="0 0 0" />
      <parent link="${prefix}${camera_name}_link"/>
      <child link="${prefix}${camera_name}_depth_frame" />
    </joint>
    <link name="${prefix}${camera_name}_depth_frame"/>

    <joint name="${prefix}${camera_name}_depth_optical_joint" type="fixed">
      <origin xyz="-0.025 0 0" rpy="0 0 0" />   <!-- calibration not necessary, depth_ir_offset used instead -->
      <parent link="${prefix}${camera_name}_rgb_optical_frame" />
      <child link="${prefix}${camera_name}_depth_optical_frame" />
    </joint>
    <link name="${prefix}${camera_name}_depth_optical_frame"/>

    <xacro:sim_3dsensor prefix="${prefix}"/>
  </xacro:macro>

  <xacro:macro name="sim_3dsensor" params="prefix">
    <gazebo reference="${prefix}${camera_name}_depth_frame">
      <sensor type="depth" name="${camera_name}">
        <always_on>true</always_on>
        <update_rate>1.0</update_rate>
        <camera>
          <horizontal_fov>${60.0 * pi/180.0}</horizontal_fov>
          <image>
            <format>B8G8R8</format>
            <width>640</width>
            <height>480</height>
          </image>
          <clip>
            <near>0.05</near>
            <far>3.50</far>  <!-- measured on real camera: 4.0 m on orthogonal surface, 3.5 m at 60 degrees angle -->
          </clip>
        </camera>
        <plugin name="kinect_${camera_name}_controller" filename="libgazebo_ros_openni_kinect.so">
          <cameraName>${camera_name}</cameraName>
          <alwaysOn>true</alwaysOn>
          <updateRate>1.0</updateRate>
          <imageTopicName>rgb/image_raw</imageTopicName>
          <depthImageTopicName>depth_registered/image_raw</depthImageTopicName>
          <pointCloudTopicName>depth_registered/points</pointCloudTopicName>
          <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
          <depthImageCameraInfoTopicName>depth_registered/camera_info</depthImageCameraInfoTopicName>
          <frameName>${prefix}${camera_name}_depth_optical_frame</frameName>
          <distortion_k1>0.0</distortion_k1>
          <distortion_k2>0.0</distortion_k2>
          <distortion_k3>0.0</distortion_k3>
          <distortion_t1>0.0</distortion_t1>
          <distortion_t2>0.0</distortion_t2>
          <pointCloudCutoff>0.35</pointCloudCutoff>  <!-- measured on real camera (same as data sheet) -->
          <pointCloudCutoffMax>3.50</pointCloudCutoffMax>
        </plugin>
      </sensor>
    </gazebo>
  </xacro:macro>

</robot>
