<robot xmlns:xacro="http://ros.org/wiki/xacro">
<!-- depends on https://github.com/IntelRealSense/realsense-ros -->
<!-- copied from https://github.com/IntelRealSense/realsense-ros/blob/ros2-development/realsense2_description/urdf/test_d455_camera.urdf.xacro -->

  <xacro:arg name="use_nominal_extrinsics" default="false"/>

  <xacro:property name="intel_s_mass" value="0.300" />

  <xacro:macro name="intel_d455_cam" params="prefix">
    <!-- see sensor_mount.urdf.xacro for sensor_mount_link-->
    <xacro:include filename="$(find realsense2_description)/urdf/_d455.urdf.xacro" />

    <joint name="${prefix}eef_main_cam_joint" type="fixed">
      <!--
        Position of the gripper starting from the endeffector pose of UR5 arm
        x=down, y=left, z=backwards
      -->
      <origin xyz="-0.015 0.09 -0.06" rpy="${pi/2} ${pi/2} ${-pi/2}" />
      <parent link="${prefix}sensor_mount_link"/>
      <child link="${prefix}eef_main_cam_link"/>
    </joint>

    <xacro:intel_d455 camera_name="eef_main_cam" prefix="${prefix}" />

  </xacro:macro>

  <xacro:macro name="intel_d455" params="camera_name prefix">
    <xacro:sensor_d455 parent="${prefix}${camera_name}_link" use_nominal_extrinsics="$(arg use_nominal_extrinsics)">
      <origin xyz="0 0 0" rpy="0 0 0"/>
    </xacro:sensor_d455>

    <link name="${prefix}${camera_name}_link">

    </link>

    <joint name="${prefix}${camera_name}_rgb_joint" type="fixed">
      <origin xyz="0 -0.045 0" rpy="0 0 0" />
      <parent link="${prefix}${camera_name}_link"/>
      <child link="${prefix}${camera_name}_rgb_frame" />
    </joint>
    <link name="${prefix}${camera_name}_rgb_frame"/>

    <joint name="${prefix}${camera_name}_rgb_optical_joint" type="fixed">
      <origin xyz="0 0 0" rpy="${-pi/2} 0 ${-pi/2}" />
      <parent link="${prefix}${camera_name}_rgb_frame" />
      <child link="${prefix}${camera_name}_rgb_optical_frame" />
    </joint>
    <link name="${prefix}${camera_name}_rgb_optical_frame"/>

    <joint name="${prefix}${camera_name}_rgb_logical_joint" type="fixed">
      <origin xyz="0 0 0" rpy="0 0 0" />
      <parent link="${prefix}${camera_name}_rgb_frame" />
      <child link="${prefix}${camera_name}_rgb_logical_frame" />
    </joint>
    <link name="${prefix}${camera_name}_rgb_logical_frame"/>

    <gazebo reference="${prefix}${camera_name}_rgb_logical_frame">
      <sensor name="logical_camera" type="logical_camera">
        <logical_camera>
          <near>0.05</near>
          <far>3.50</far>
          <horizontal_fov>${60.0 * pi/180.0}</horizontal_fov>
          <aspect_ratio>${640.0/480.0}</aspect_ratio>
        </logical_camera>
        <visualize>false</visualize>
        <always_on>true</always_on>
        <update_rate>10</update_rate>
        <plugin name="logical_camera_plugin" filename="liblogical_camera_plugin.so">
          <cameraName>${prefix}${camera_name}</cameraName>
          <imageTopicName>rgb/logical_image</imageTopicName>
          <frameName>${prefix}${camera_name}_rgb_logical_frame</frameName>
        </plugin>
      </sensor>
    </gazebo>

    <joint name="${prefix}${camera_name}_depth_joint" type="fixed">
      <origin xyz="0 -0.02 0" rpy="0 0 0" />
      <parent link="${prefix}${camera_name}_link"/>
      <child link="${prefix}${camera_name}_depth_frame" />
    </joint>
    <link name="${prefix}${camera_name}_depth_frame"/>

    <joint name="${prefix}${camera_name}_depth_optical_joint" type="fixed">
      <origin xyz="-0.025 0 0" rpy="0 0 0" />   <!-- calibration not necessary, depth_ir_offset used instead -->
      <parent link="${prefix}${camera_name}_rgb_optical_frame" />
      <child link="${prefix}${camera_name}_depth_optical_frame" />
    </joint>
    <link name="${prefix}${camera_name}_depth_optical_frame"/>

    <xacro:sim_3dsensor prefix="${prefix}"/>
  </xacro:macro>

  <xacro:macro name="sim_3dsensor" params="prefix">
    <gazebo reference="${prefix}${camera_name}_depth_frame">
      <sensor type="depth" name="${camera_name}">
        <always_on>true</always_on>
        <update_rate>1.0</update_rate>
        <camera>
          <horizontal_fov>${69.0 * pi/180.0}</horizontal_fov>
          <image>
            <format>B8G8R8</format>
            <width>640</width>
            <height>480</height>
          </image>
          <clip>
            <near>0.05</near>
            <far>3.50</far>  <!-- TODO: measured on real camera (for ASTRA its 4.0 m on orthogonal surface, 3.5 m at 60 degrees angle) -->
          </clip>
        </camera>

        <!-- TODO: this is just copied from the astra-setup we need to measure the real sensor -->
        <plugin name="kinect_${camera_name}_controller" filename="libgazebo_ros_openni_kinect.so">
          <cameraName>${camera_name}</cameraName>
          <alwaysOn>true</alwaysOn>
          <updateRate>1.0</updateRate>
          <imageTopicName>rgb/image_raw</imageTopicName>
          <depthImageTopicName>depth_registered/image_raw</depthImageTopicName>
          <pointCloudTopicName>depth_registered/points</pointCloudTopicName>
          <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
          <depthImageCameraInfoTopicName>depth_registered/camera_info</depthImageCameraInfoTopicName>
          <frameName>${prefix}${camera_name}_depth_optical_frame</frameName>
          <distortion_k1>0.0</distortion_k1>
          <distortion_k2>0.0</distortion_k2>
          <distortion_k3>0.0</distortion_k3>
          <distortion_t1>0.0</distortion_t1>
          <distortion_t2>0.0</distortion_t2>
          <pointCloudCutoff>0.35</pointCloudCutoff>
          <pointCloudCutoffMax>3.50</pointCloudCutoffMax>
        </plugin>
      </sensor>
    </gazebo>
  </xacro:macro>

</robot>
