<?xml version="1.0" ?>

<launch>
  <arg name="gui" default="True" />
  <!--  <arg name="mir_100_ns" default="mir_100" /> -->

  <!-- Load gazebo controller configurations from YAML file to parameter server -->
  <!-- Note: You MUST load these PID parameters for all joints that are using
       the PositionJointInterface, otherwise the arm + gripper will act like a
       giant parachute, counteracting gravity, and causing some of the wheels
       to lose contact with the ground, so the robot won't be able to properly
       navigate. See
       https://github.com/ros-simulation/gazebo_ros_pkgs/issues/612 -->
  <rosparam file="$(find mobipick_gazebo)/config/ur5/gazebo_controller.yaml" command="load" />
  <rosparam file="$(find mobipick_gazebo)/config/robotiq_2f_140/gazebo_controller.yaml" command="load" />


<!-- <group ns="$(arg mir_100_ns)"> -->

  <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find mobipick_description)/config/joint_state_controller.yaml" command="load" />
  <rosparam file="$(find mobipick_description)/config/mir_100/diffdrive_controller.yaml" command="load" />
  <rosparam file="$(find mobipick_description)/config/ur5/arm_controller_ur5.yaml" command="load" />
  <rosparam file="$(find mobipick_description)/config/robotiq_2f_140/position_controller.yaml" command="load" />

  <include file="$(find mobipick_gazebo)/launch/mobipick/spawn_mobipick.launch" />

  <!-- load  teleop -->
  <node name="rqt_robot_steering" pkg="rqt_robot_steering" type="rqt_robot_steering">
    <param name="default_topic" value="mobile_base_controller/cmd_vel"/>
    <param name="default_vx_max" value="1.0" />
    <param name="default_vx_min" value="-1.0" />
    <param name="default_vw_max" value="1.5" />
    <param name="default_vw_min" value="-1.5" />
  </node>

  <!-- load the controllers -->
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="joint_state_controller mobile_base_controller arm_controller gripper_controller"/>

  <!-- </group> -->

    <node pkg="rostopic" type="rostopic" name="fake_joint_calibration" args="pub /calibrated std_msgs/Bool true"/>

<!-- convert joint states to TF transforms for rviz, etc -->
<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
  respawn="false" output="screen">
</node>

</launch>

