<launch>

  <!-- specify the planning pipeline -->
  <arg name="pipeline" default="ompl" />

  <!-- By default, we do not start a database (it can be large) -->
  <arg name="db" default="false" />
  <!-- Allow user to specify database location -->
  <arg name="db_path" default="$(find mobipick_moveit_config)/default_warehouse_mongo_db" />

  <!-- By default, we are not in debug mode -->
  <arg name="debug" default="false" />

  <!-- The namespace for all topics -->
  <arg name="namespace" default="mobipick"          doc="Namespace to push all topics into"/>

  <arg name="robot_version" default="os" doc="robot version, can be 'hb' for Bremen or 'os' for OsnabrÃ¼ck" />

  <!-- A prefix for all joints and links of the robot -->
  <arg name="prefix" default="mobipick" />

  <!-- Prefix with / or empty -->
  <arg name="prefix_" default=""               if="$(eval prefix == '')" />
  <arg name="prefix_" default="$(arg prefix)/" unless="$(eval prefix == '')" />

  <!-- By default, we will load or override the robot_description -->
  <arg name="load_robot_description" default="true"/>

  <!-- Choose controller manager: fake or simple -->
  <arg name="moveit_controller_manager" default="fake" />
  <!-- Set execution mode for fake execution controllers -->
  <arg name="fake_execution_type" default="interpolate" />

  <!-- By default, hide joint_state_publisher's GUI in 'fake' controller_manager mode -->
  <arg name="use_gui" default="false" />
  <arg name="use_rviz" default="true" />

  <!-- whether to use the pointcloud (on Gazebo) or depthimage (on real robot) octomap updater -->
  <arg name="use_pointcloud" default="false"/>

  <!-- If needed, broadcast static tf for robot root -->
  <node pkg="tf2_ros" type="static_transform_publisher" name="virtual_joint_broadcaster_0" args="0 0 0 0 0 0 map $(arg prefix_)odom" />
  <node pkg="tf2_ros" type="static_transform_publisher" name="virtual_joint_broadcaster_1" args="0 0 0 0 0 0 $(arg prefix_)odom $(arg prefix_)base_footprint" />

  <group ns="$(arg namespace)">

    <group if="$(eval arg('moveit_controller_manager') == 'fake')">
      <!-- We do not have a real robot connected, so publish fake joint states via a joint_state_publisher
           MoveIt's fake controller's joint states are considered via the 'source_list' parameter -->
      <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" unless="$(arg use_gui)">
        <rosparam param="source_list">[move_group/fake_controller_joint_states]</rosparam>
      </node>
      <!-- If desired, a GUI version is available allowing to move the simulated robot around manually
           This corresponds to moving around the real robot without the use of MoveIt. -->
      <node name="joint_state_publisher" pkg="joint_state_publisher_gui" type="joint_state_publisher_gui" if="$(arg use_gui)">
        <rosparam param="source_list">[move_group/fake_controller_joint_states]</rosparam>
      </node>

      <!-- Given the published joint states, publish tf for the robot links -->
      <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />
    </group>

    <!-- Run the main MoveIt executable without trajectory execution (we do not have controllers configured by default) -->
    <include file="$(dirname)/move_group.launch">
      <arg name="robot_version" value="$(arg robot_version)" />
      <arg name="allow_trajectory_execution" value="true"/>
      <arg name="moveit_controller_manager" value="$(arg moveit_controller_manager)" />
      <arg name="fake_execution_type" value="$(arg fake_execution_type)"/>
      <arg name="info" value="true"/>
      <arg name="debug" value="$(arg debug)"/>
      <arg name="pipeline" value="$(arg pipeline)"/>
      <arg name="load_robot_description" value="$(arg load_robot_description)"/>
      <arg name="use_pointcloud" value="$(arg use_pointcloud)" />
      <arg name="prefix" value="$(arg prefix)" />
    </include>
  </group>

  <!-- Run Rviz and load the default config to see the state of the move_group node -->
  <include file="$(dirname)/moveit_rviz.launch" if="$(arg use_rviz)">
    <arg name="rviz_config" value="$(dirname)/moveit.rviz"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>

  <!-- If database loading was enabled, start mongodb as well -->
  <include file="$(dirname)/default_warehouse_db.launch" if="$(arg db)">
    <arg name="moveit_warehouse_database_path" value="$(arg db_path)"/>
  </include>

</launch>
